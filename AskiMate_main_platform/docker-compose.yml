services:
  db:
    image: postgres:15
    container_name: askimate_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - askinet

  web:
    build:
      context: ./mainplatform
    container_name: mainplatform
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./mainplatform:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started
      ai_app:
        condition: service_healthy
    restart: always
    networks:
      - askinet

  ai_app:
    build:
      context: ./ai_app
    container_name: ai_app
    command: uvicorn chat_app:app --host 0.0.0.0 --port 8000
    volumes:
      # کد برنامه
      - ./ai_app:/app
      # اعتبارنامه AWS به صورت read-only
      - /mnt/c/Users/almahdilaptop/.aws:/root/.aws:ro
    ports:
      - "8001:8000" # host:container
    env_file:
      - .env
    environment:
      AWS_REGION: ${AWS_REGION}
      BEDROCK_ENDPOINT: ${BEDROCK_ENDPOINT}

    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8000/health || exit 1"]
      interval: 30s        # هر 30 ثانیه چک کن
      timeout: 5s
      retries: 5
      start_period: 90s    # ۹۰ ثانیه فرصت بده که مدل کامل لود شه

    restart: always
    networks:
      - askinet

volumes:
  postgres_data:

networks:
  askinet:
    driver: bridge
